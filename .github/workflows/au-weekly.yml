name: AU tenders (NSW/QLD/VIC) — weekly + email

on:
  workflow_dispatch:
    inputs:
      pages:
        description: "Listing pages to scan"
        required: false
        default: "2"
      detail_limit:
        description: "Detail pages to peek (for filtering)"
        required: false
        default: "40"
      only_filtered:
        description: "1=only filtered, 0=all"
        required: false
        default: "1"
  schedule:
    # GitHub cron is UTC. These cover 09:00 Monday Sydney across AEST/AEDT.
    - cron: "0 22 * * SUN"   # 09:00 Mon AEDT (UTC+11)
    - cron: "0 23 * * SUN"   # 09:00 Mon AEST (UTC+10)

jobs:
  run-all:
    runs-on: ubuntu-22.04
    timeout-minutes: 20

    env:
      PAGES: ${{ github.event.inputs.pages || '2' }}
      DETAIL_LIMIT: ${{ github.event.inputs.detail_limit || '40' }}
      ONLY_FILTERED: ${{ github.event.inputs.only_filtered || '1' }}
      WRITE_NEAR: "1"  # keep near-miss files on

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      # --- Run NSW ---
      - name: NSW
        run: python scrape_nsw.py || true

      # --- Run QLD ---
      - name: QLD
        run: python scrape_qld.py || true

      # --- Run VIC ---
      - name: VIC
        run: python scrape_vic.py || true

      - name: Collect outputs
        run: |
          mkdir -p out
          # NSW
          [ -f nsw-links.json ] && cp nsw-links.json out/nsw-links.json || true
          [ -f nsw-near.json ]  && cp nsw-near.json  out/nsw-near.json  || true
          [ -f nsw-raw.json ]   && cp nsw-raw.json   out/nsw-raw.json   || true
          # QLD
          [ -f qld-links.json ] && cp qld-links.json out/qld-links.json || true
          [ -f qld-near.json ]  && cp qld-near.json  out/qld-near.json  || true
          [ -f qld-raw.json ]   && cp qld-raw.json   out/qld-raw.json   || true
          # VIC
          [ -f vic-links.json ] && cp vic-links.json out/vic-links.json || true
          [ -f vic-near.json ]  && cp vic-near.json  out/vic-near.json  || true
          [ -f vic-raw.json ]   && cp vic-raw.json   out/vic-raw.json   || true
          # Helpful debug (if present)
          [ -f qld-listing.html ] && cp qld-listing.html out/qld-listing.html || true
          [ -f vic-listing.html ] && cp vic-listing.html out/vic-listing.html || true
          [ -f vic-debug-anchors.json ] && cp vic-debug-anchors.json out/vic-debug-anchors.json || true

      - name: Build HTML summary
        run: |
          python - << 'PY'
          import json, os, datetime
          def count(path):
            try:
              with open(path,'r',encoding='utf-8') as f:
                return len(json.load(f))
            except Exception:
              return 0
          files = {
            'NSW strict': 'out/nsw-links.json',
            'NSW near'  : 'out/nsw-near.json',
            'NSW raw'   : 'out/nsw-raw.json',
            'QLD strict': 'out/qld-links.json',
            'QLD near'  : 'out/qld-near.json',
            'QLD raw'   : 'out/qld-raw.json',
            'VIC strict': 'out/vic-links.json',
            'VIC near'  : 'out/vic-near.json',
            'VIC raw'   : 'out/vic-raw.json',
          }
          now = datetime.datetime.utcnow().strftime('%Y-%m-%d %H:%M UTC')
          rows = '\n'.join(f"<tr><td>{k}</td><td>{count(v)}</td></tr>" for k,v in files.items())
          html = f"""<h2>AU Drone/Energy Tenders — Weekly Summary</h2>
          <p>Generated: {now}</p>
          <table border='1' cellpadding='6' cellspacing='0'>
            <tr><th>File</th><th>Count</th></tr>
            {rows}
          </table>"""
          os.makedirs('out', exist_ok=True)
          with open('out/email_body.html','w',encoding='utf-8') as f:
            f.write(html)
          PY

      - name: Zip attachments
        run: |
          cd out
          zip -r ../au-tenders-$(date +%F).zip . >/dev/null 2>&1 || true
          cd ..

      - name: Upload artifact (backup)
        uses: actions/upload-artifact@v4
        with:
          name: au-tenders-output
          path: |
            out/**
            au-tenders-*.zip

      # ---- Email via Microsoft 365 (Exchange Online) ----
      - name: Send email (Microsoft 365)
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.office365.com
          server_port: 587
          secure: true
          username: admin@skyspec.com.au
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "AU Drone/Energy tenders — NSW/QLD/VIC"
          to: admin@skyspec.com.au
          from: "Skyspec Tenders <admin@skyspec.com.au>"
          html_body: file://out/email_body.html   # <-- use html_body (not content_type)
          attachments: >
            au-tenders-*.zip,
            out/nsw-links.json,out/nsw-near.json,out/nsw-raw.json,
            out/qld-links.json,out/qld-near.json,out/qld-raw.json,
            out/vic-links.json,out/vic-near.json,out/vic-raw.json
